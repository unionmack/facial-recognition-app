{"ast":null,"code":"var _jsxFileName = \"/Users/mackhayden/Desktop/website-projects/facial-recognition-app/facial-recognition-brain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport Rank from './Components/Rank/Rank.js';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition.js';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nconst app = new Clarifai.App({\n  apiKey: '4544842e77a4495489e8b822f577b619'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 400\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFaces = data.outputs.data.regions.map(region => region.region_info.bounding_box);\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return clarifaiFaces.map(face => {\n        return {\n          leftCol: face.left_col * width,\n          topRow: face.top_row * height,\n          rightCol: width - face.right_col * width,\n          bottomRow: height - face.bottom_row * height\n        };\n      });\n    };\n\n    this.displayFaceBox = boxes => {\n      this.setState({\n        boxes: boxes\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict('c0c0ac362b03416da06ab3fa36fb58e3', this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n      ;\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      boxes: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      boxes: this.state.boxes,\n      imageUrl: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mackhayden/Desktop/website-projects/facial-recognition-app/facial-recognition-brain/src/App.js"],"names":["React","Component","Navigation","Logo","Rank","ImageLinkForm","FaceRecognition","Particles","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","calculateFaceLocation","data","clarifaiFaces","outputs","regions","map","region","region_info","bounding_box","image","document","getElementById","width","Number","height","face","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","boxes","setState","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","then","response","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Navigation from './Components/Navigation/Navigation'\nimport Logo from './Components/Logo/Logo'\nimport Rank from './Components/Rank/Rank.js'\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm'\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition.js'\nimport Particles from 'react-particles-js'\nimport Clarifai from 'clarifai'\n\nconst app = new Clarifai.App({\n  apiKey: '4544842e77a4495489e8b822f577b619'\n})\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 400\n      }\n    }\n    }\n  }\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      boxes: []\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFaces = data.outputs.data.regions.map(region => region.region_info.bounding_box);\n    const image = document.getElementById('inputimage')\n    const width = Number(image.width);\n    const height = Number(image.height);\n    \n    return clarifaiFaces.map(face => {\n      return {\n        leftCol: face.left_col * width,\n        topRow: face.top_row * height,\n        rightCol: width - (face.right_col * width),\n        bottomRow: height - (face.bottom_row * height)\n      }\n    })\n  }\n\n  displayFaceBox = (boxes) => {\n    this.setState({boxes: boxes})\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models.predict('c0c0ac362b03416da06ab3fa36fb58e3', this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err => console.log(err));\n  ;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n      <Particles className=\"particles\"\n              params={particlesOptions}\n            />\n      <Navigation />\n      <Logo />\n      <Rank />\n      <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n      <FaceRecognition boxes={this.state.boxes} imageUrl={this.state.imageUrl}/>\n      {/*<Logo />\n      // <ImageLinkForm />\n  // <FaceRecognition />*/}\n    </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}